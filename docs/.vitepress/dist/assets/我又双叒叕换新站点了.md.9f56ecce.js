import{_ as a,l as e,m as o,C as t}from"./chunks/framework.bcb722b3.js";const _=JSON.parse('{"title":"我又双叒叕换新站点了","description":"","frontmatter":{"title":"我又双叒叕换新站点了","mtime":"2023-10-18T00:00:00.000Z","ctime":"2023-10-18T00:00:00.000Z","layout":"post"},"headers":[],"relativePath":"我又双叒叕换新站点了.md","filePath":"我又双叒叕换新站点了.md"}'),r={name:"我又双叒叕换新站点了.md"},i=t('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><p>众所周知（其实没几个人知道），我曾经用过WordPress，因为php太过时就放弃了。后来用了halo，偶尔零零散散的更新了几篇博客，但都是没有的垃圾技术。以至于后来面试的时候都不好意思把我的博客拿出来。记得有个面试官还问我，你这个博客怎么没几篇文章，而且还用的现成的CMS？毫无疑问，那场面试挂掉了。放假回家之后瞅了一眼阿里云，服务器快到期了，失去了学生优惠的我毫无疑问已经续费不起了。于是乎，我想整个静态站点。想着自己学习学习开发一个，也顺道捡一捡好久没碰的技术，就有了今天这篇。</p><h1 id="开发过程" tabindex="-1">开发过程 <a class="header-anchor" href="#开发过程" aria-label="Permalink to &quot;开发过程&quot;">​</a></h1><h2 id="学习" tabindex="-1">学习 <a class="header-anchor" href="#学习" aria-label="Permalink to &quot;学习&quot;">​</a></h2><p>既然是静态站点，那就得用SSG吧，我就盯上了vuepress，但这玩意儿build的时候就报错。没办法，用更新的vitepress吧，但这东西文档是英文的，实在不想读。后来思来想去，先去学vue吧。</p><p>以前虽然学过vue，但因为总感觉学不会从来没拿来练过手。事实证明这东西根本不用彻底学完，学个差不多直接上手，边做边补效率更高。总之，经历一番学到点不敢动工后，在某次学完组合式API后我下定决心开始动工了。</p><h2 id="动工" tabindex="-1">动工 <a class="header-anchor" href="#动工" aria-label="Permalink to &quot;动工&quot;">​</a></h2><p>我上来直接用vue官方文档的template创建了个工程，写了个几天把首页写完了。寻思着写个登录页面就去做后端吧。恰巧此时又去看了看vitepress的文档，突然发现以前看的不是很明白的文档竟然看懂了。这还等啥？我直接把写好的组件挪过去了。最后也是顺利做完了这个网站。</p><h1 id="经历的曲折" tabindex="-1">经历的曲折 <a class="header-anchor" href="#经历的曲折" aria-label="Permalink to &quot;经历的曲折&quot;">​</a></h1><h2 id="学习过程" tabindex="-1">学习过程 <a class="header-anchor" href="#学习过程" aria-label="Permalink to &quot;学习过程&quot;">​</a></h2><p>主要问题是不敢动工，感觉这里面的东西真的好多。我先去又快速复习了一遍HTML,CSS,JavaScript（其实根本没必要），然后在油管找了个写页面的，下载下来个项目看完了。之后就去看vue的官方文档，发现这东西真看不懂。。。兜兜转转最后还是去b站看视频吧，在学会了组合式API后终于下定决心动工了。</p><h2 id="样式设计的问题" tabindex="-1">样式设计的问题 <a class="header-anchor" href="#样式设计的问题" aria-label="Permalink to &quot;样式设计的问题&quot;">​</a></h2><p>在读过几个项目后，我发现这些项目都遵循着一套颜色设计，也就是CSS地下<code>:root</code>下面的颜色变量。不过自己又不懂设计，想找一套颜色设计丰富的组件库。最终我选了arco-design这个颜色设计丰富的组件，也想着以后有些功能能用到里面的组件。</p><h2 id="md文件转换成html后样式的问题" tabindex="-1">md文件转换成HTML后样式的问题 <a class="header-anchor" href="#md文件转换成html后样式的问题" aria-label="Permalink to &quot;md文件转换成HTML后样式的问题&quot;">​</a></h2><p>vitepress使用<code>&lt;Content/&gt;</code>这个组件把转换后的内容嵌入到页面。为了给内容设定样式，我给这个组件设置了个<code>class</code>。但是每次设置样式都得<code>.classname h1</code>这样子的。后来按搜索到的说法安装了scss，完美解决了这个问题，过程不算曲折。</p><h2 id="夜间模式的问题" tabindex="-1">夜间模式的问题 <a class="header-anchor" href="#夜间模式的问题" aria-label="Permalink to &quot;夜间模式的问题&quot;">​</a></h2><p>页面颜色调成夜间模式没什么问题，用arco-design的颜色变量就可以完美解决。问题在于代码的颜色：这个东西是由vitepress生成的，arco-design的方案影响不到。开始试了直接改<code>dom</code>，然后出了一堆bug。最后参考了vitepress官方文档里的代码，只加了几行css代码就解决了。</p><h2 id="激活不匹配的问题" tabindex="-1">激活不匹配的问题 <a class="header-anchor" href="#激活不匹配的问题" aria-label="Permalink to &quot;激活不匹配的问题&quot;">​</a></h2><p>这个问题真是折腾死人……，每次在开发环境运行起来就没问题，每次一<code>build</code>完成浏览器就报<code>Hydration completed but contains mismatches.</code>的错误。vue官方文档里说可以用<code>&lt;ClientOnly&gt;</code>组件把SSR不友好的组件包裹起来，我全部包裹起来一个组件一个组件打开才发现问题在哪。整了半天原来组件库不能用全局的方式引入，我在每个组件里又挨个局部引入才解决。</p><h2 id="部署到阿里云oss后某些页面激活不匹配" tabindex="-1">部署到阿里云oss后某些页面激活不匹配 <a class="header-anchor" href="#部署到阿里云oss后某些页面激活不匹配" aria-label="Permalink to &quot;部署到阿里云oss后某些页面激活不匹配&quot;">​</a></h2><p>这个到现在都没有解决，我想可能没有个合适的解决方案。在vitepress的页面中，每次访问<code>/1.html</code>和每次访问<code>/1</code>是一样的。但阿里云访问<code>/1</code>时会找<code>/1</code>这个文件夹下有没有网页，没有就返回404，这就导致阿里云返回的和客户端返回的结果不一样导致激活不匹配。</p><h1 id="后续计划" tabindex="-1">后续计划 <a class="header-anchor" href="#后续计划" aria-label="Permalink to &quot;后续计划&quot;">​</a></h1><ol><li>打算把深色模式和回到顶部固定到页面右下角</li><li>给文章页面做个目录</li><li>给文章页面做个阅读进度</li><li>做个标签系统</li></ol><h1 id="最后" tabindex="-1">最后 <a class="header-anchor" href="#最后" aria-label="Permalink to &quot;最后&quot;">​</a></h1><p>以前在halo站点的文章我保留下来了两篇，一是因为新站点就这么一篇也不好看，二是这两篇是以前写过的为数不多的能看的过去的文章。</p>',25),d=[i];function l(s,c,h,n,p,u){return e(),o("div",null,d)}const b=a(r,[["render",l]]);export{_ as __pageData,b as default};
